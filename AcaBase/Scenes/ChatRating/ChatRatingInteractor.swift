//
//  ChatRatingInteractor.swift
//  AcaBase
//
//  Created by Seif eddinne meddeb on 4/3/21.
//  Copyright (c) 2021 Seif eddinne meddeb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ChatRatingBusinessLogic
{
    func getTutor(request: ChatRating.Tutor.Request)
    func submitRating(request: ChatRating.SubmitRating.Request)
}

protocol ChatRatingDataStore
{
    var tutor : TutorDAO? { get set }
    var questionId : Int? { get set }
}

class ChatRatingInteractor: ChatRatingBusinessLogic, ChatRatingDataStore
{
    var presenter: ChatRatingPresentationLogic?
    var worker: ChatRatingWorker?
    var tutor : TutorDAO?
    var questionId : Int?
    
    
    // MARK: getTutor
    func getTutor(request: ChatRating.Tutor.Request)
    {
        if let tutor = tutor {
            let response = ChatRating.Tutor.Response(tutor: tutor)
            presenter?.presentTutor(response: response)
        }
        
    }
    
    // MARK: submitRating
    func submitRating(request: ChatRating.SubmitRating.Request) {
        worker = ChatRatingWorker(chatStore: ChatAPI())
        
        if let tutorId = self.tutor?.objectId, let questionId = self.questionId {
            worker?.rateChatWithTutor(tutorId: tutorId , questionId: questionId, comment: request.comment, rating: request.rating, compeltion: { (error) in
                let response = ChatRating.SubmitRating.Response(error: error)
                self.presenter?.presentSubmitRating(response: response)
            })
        }
    }
}
