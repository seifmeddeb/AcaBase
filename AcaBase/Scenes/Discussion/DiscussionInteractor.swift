//
//  DiscussionInteractor.swift
//  AcaBase
//
//  Created by Seif eddinne meddeb on 3/5/21.
//  Copyright (c) 2021 Seif eddinne meddeb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DiscussionBusinessLogic
{
    func getDiscussionsList(request: Discussion.List.Request)
    func setFavoriteDiscussion(request: Discussion.Favorite.Request)
    func deleteDiscussion(request: Discussion.Delete.Request)
}

protocol DiscussionDataStore
{
    //var name: String { get set }
}

class DiscussionInteractor: DiscussionBusinessLogic, DiscussionDataStore
{
    var presenter: DiscussionPresentationLogic?
    var worker: DiscussionWorker?
    var homeWorker = HomeWorker(mainPageStore: MainPageAPI())
    
    // MARK: getDiscussionsList
    
    func getDiscussionsList(request: Discussion.List.Request)
    {
        worker = DiscussionWorker()
        worker?.getDiscussions(by: request.name) { discussionList in
            self.homeWorker.getTutors { (tutorList) in
                let response = Discussion.List.Response(discussions: discussionList, tutors: tutorList)
                self.presenter?.presentDiscussionsList(response: response)
            }
        }
    }
    
    // MARK: setFavoriteDiscussion
    
    func setFavoriteDiscussion(request: Discussion.Favorite.Request) {
        worker = DiscussionWorker()
        worker?.setFavoriteDiscussion(by: request.discussionId, isFavorite: request.isFavorite)
    }
    
    // MARK: deleteDiscussion
    
    func deleteDiscussion(request: Discussion.Delete.Request) {
        worker = DiscussionWorker()
        worker?.deleteDiscussion(by: request.discussionId)
    }
}
