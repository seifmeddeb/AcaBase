//
//  HomePresenter.swift
//  AcaBase
//
//  Created by Seif eddinne meddeb on 6/14/20.
//  Copyright (c) 2020 Seif eddinne meddeb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomePresentationLogic
{
    func presentTrainers(response: Home.Tutors.Response)
    func presentTopics(response: Home.Topics.Response)
    func presentQuizs(response: Home.Quizs.Response)
}

class HomePresenter: HomePresentationLogic
{
    weak var viewController: HomeDisplayLogic?
    
    // MARK: Do something
    
    func presentTrainers(response: Home.Tutors.Response)
    {
        var tutorViewModels = [TutorViewModel]()
        
        for tutor in response.tutors {
            let subjects = getSubjectsString(for: tutor.subjects)
            let imageUrl = URL(string: tutor.picture ?? "")
            let answerdQuestions = getAnsweredQuestions(answersNbr: tutor.answredQuestions)
            let tutor = TutorViewModel(model: tutor, subjects: subjects, answeredQuestions: answerdQuestions, imageUrl: imageUrl)
            tutorViewModels.append(tutor)
        }
        
        let viewModel = Home.Tutors.ViewModel(tutorList: tutorViewModels, errorMsg: "error fetching trainers")
        viewController?.displayTrainers(viewModel: viewModel)
        
    }
    
    func presentTopics(response: Home.Topics.Response) {
        let viewModel = Home.Topics.ViewModel(topics: response.topics ?? [TopicDAO](), errorMsg: "error fetching trainers")
        viewController?.displayTopics(viewModel: viewModel)
    }
    
    func presentQuizs(response: Home.Quizs.Response) {
        let viewModel = Home.Quizs.ViewModel(quizs: response.quizs ?? [QuizDAO](), errorMsg: "error fetching quizs")
        viewController?.displayQuizs(viewModel: viewModel)
    }
}
