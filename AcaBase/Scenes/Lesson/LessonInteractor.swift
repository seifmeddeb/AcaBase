//
//  LessonInteractor.swift
//  AcaBase
//
//  Created by Seif eddinne meddeb on 12/21/20.
//  Copyright (c) 2020 Seif eddinne meddeb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LessonBusinessLogic
{
    func getChapter(request: Lesson.Chapter.Request)
    func getVideos(request: Lesson.Videos.Request)
    func getQuizs(request: Lesson.Quizs.Request)
}

protocol LessonDataStore
{
    var chapter : ChapterDAO? { get set }
}

class LessonInteractor: LessonBusinessLogic, LessonDataStore
{
    var presenter: LessonPresentationLogic?
    var worker: LessonWorker?
    var chapter : ChapterDAO?
    
    
    // MARK: getChapter
    func getChapter(request: Lesson.Chapter.Request) {
        self.worker = LessonWorker(chapterStore: ChapterDetailsAPI())
        if let chapter = chapter {
            self.worker?.getChapterDetails(chapter: chapter, completionHandler: { chapterDetails in
                if let chapterDetails = chapterDetails {
                    self.chapter = chapterDetails
                    let response = Lesson.Chapter.Response(chapter: chapterDetails)
                    self.presenter?.presentChapter(response: response)
                }
            })
        }
    }
    
    // MARK: getVideos
    func getVideos(request: Lesson.Videos.Request)
    {
        worker = LessonWorker(chapterStore: ChapterDetailsAPI())
        var videosResponse = [VideoResponseAlias]()
        if let chapterUnwrapped = chapter {
            videosResponse = worker!.getVideos(for: chapterUnwrapped)
        }
        let response = Lesson.Videos.Response(videoList: videosResponse)
        presenter?.presentVideos(response: response)
    }
    
    // MARK: getQuizs
    func getQuizs(request: Lesson.Quizs.Request)
    {
        worker = LessonWorker(chapterStore: ChapterDetailsAPI())
        if let chapter = chapter {
            var quizsResponse = [QuizDAO]()
//            if request.shouldUpdate {
//                self.worker?.getChapterDetails(chapter: chapter, completionHandler: { chapterDetails in
//                    if let chapterDetails = chapterDetails {
//                        self.chapter = chapterDetails
//                        quizsResponse = self.worker!.getQuizs(for: chapterDetails)
//                        let response = Lesson.Quizs.Response(quizList: quizsResponse)
//                        self.presenter?.presentQuizs(response: response)
//                    }
//                })
//            } else {
                quizsResponse = worker!.getQuizs(for: chapter)
                let response = Lesson.Quizs.Response(quizList: quizsResponse)
                presenter?.presentQuizs(response: response)
//            }
        }
    }
}
