//
//  LoginViewController.swift
//  AcaBase
//
//  Created by Seif eddinne meddeb on 5/1/20.
//  Copyright (c) 2020 Seif eddinne meddeb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginDisplayLogic: class
{
    func displaySuccessfullLogin(viewModel: Login.User.ViewModel.Result.Successfull)
    func displayFailLogin(viewModel: Login.User.ViewModel.Result.Failure)
    func displayAutoFillEmails(viewModel: Login.Users.ViewModel)
}

class LoginViewController: UIViewController, LoginDisplayLogic
{
    var interactor: LoginBusinessLogic?
    var router: (NSObjectProtocol & LoginRoutingLogic & LoginDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = LoginInteractor()
        let presenter = LoginPresenter()
        let router = LoginRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        fetchAutoFillEmails()
    }
    
    // MARK: IBOutlets
    
    @IBOutlet weak var emailTextField: UITextField!
    @IBOutlet weak var pswTextField: UITextField!
    
    // MARK: IBActions
    
    @IBAction func login(_ sender: Any) {
        loginUser()
    }
    
    // MARK: Login User
    
    func loginUser()
    {
        let request = Login.User.Request(email: emailTextField.text!, password: pswTextField.text!)
        interactor?.loginUser(request: request)
    }
    
    func displaySuccessfullLogin(viewModel: Login.User.ViewModel.Result.Successfull)
    {
        emailTextField.text = viewModel.name
    }
    
    func displayFailLogin(viewModel: Login.User.ViewModel.Result.Failure) {
        let alert = UIAlertController(title: "Error", message: viewModel.errorMsg, preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "OK", style: .cancel, handler: { (action) in
            alert.dismiss(animated: true, completion: nil)
        }))
        self.present(alert, animated: true)
    }
    // MARK: AutoFillEmails
    
    func fetchAutoFillEmails() {
        let request = Login.Users.Request()
        interactor?.fetchAutoFillEmails(request: request)
    }
    
    func displayAutoFillEmails(viewModel: Login.Users.ViewModel) {
        emailTextField.text = viewModel.email
    }
    
}
