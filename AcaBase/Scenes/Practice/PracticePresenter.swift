//
//  PracticePresenter.swift
//  AcaBase
//
//  Created by Seif eddinne meddeb on 11/28/20.
//  Copyright (c) 2020 Seif eddinne meddeb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PracticePresentationLogic
{
    func presentSubjects(response: Practice.Subjects.Response)
    func presentModules(response: Practice.Modules.Response)
}

class PracticePresenter: PracticePresentationLogic
{
    weak var viewController: PracticeDisplayLogic?
    
    // MARK: presentSubjects
    
    func presentSubjects(response: Practice.Subjects.Response)
    {
        var subjectsViewModel = [String:Int]()
        
        for subject in response.subjects {
            subjectsViewModel[subject.name] = subject.objectId
        }
        
        let viewModel = Practice.Subjects.ViewModel(subjects: subjectsViewModel)
        viewController?.displaySubjects(viewModel: viewModel)
    }
    
    // MARK: presentModules
    func presentModules(response: Practice.Modules.Response) {
        var moduleViewModels = [ModuleViewModel]()
        if let modules = response.modules {
            for module in modules {
                let viewModel = ModuleViewModel(model: module, quizsNbr: module.quizsNbr, desc: "\(module.quizsNbr) quizs in \(module.model.chapters?.count ?? 0) chapters")
                moduleViewModels.append(viewModel)
            }
        }
        let viewModel = Practice.Modules.ViewModel(modules: moduleViewModels)
        viewController?.displayModules(viewModel: viewModel)
    }
}
