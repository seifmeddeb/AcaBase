//
//  SubscribeModels.swift
//  AcaBase
//
//  Created by Seif eddinne meddeb on 5/1/20.
//  Copyright (c) 2020 Seif eddinne meddeb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum Subscribe
{
    // MARK: Use cases
    
    enum User
    {
        struct Request : Codable
        {
            var firstName : String
            var lastName : String
            var phone : String
            var email : String
            var password : String
            var passwordRepeat : String?
            var image : String
            
            enum CodingKeys: String, CodingKey {
                case firstName = "first_name"
                case lastName = "last_name"
                case phone = "phone_number"
                case email = "email"
                case password = "password"
                case passwordRepeat = "passwordRepeat"
                case image = "picture"
            }
        }
        struct Response
        {
            var user : UserDAO?
            var errorMsg : String?
            var firstNameError : String?
            var lastNameError : String?
            var phoneError : String?
            var pictureError : String?
            var emailError : String?
            var passwordError : String?
            var passwordRepeatError : String?
        }
        struct ViewModel
        {
            enum Result
            {
                struct Successfull {
                    var user : UserDAO
                }
                struct Failure {
                    var errorMsg : String?
                    var firstNameError : String?
                    var lastNameError : String?
                    var phoneError : String?
                    var pictureError : String?
                    var emailError : String?
                    var passwordError : String?
                    var passwordRepeatError : String?
                }
            }
        }
    }
}
