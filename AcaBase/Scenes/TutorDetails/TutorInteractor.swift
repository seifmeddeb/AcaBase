//
//  TutorInteractor.swift
//  AcaBase
//
//  Created by Seif eddinne meddeb on 9/27/20.
//  Copyright (c) 2020 Seif eddinne meddeb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol TutorBusinessLogic
{
    func getTutor(request: Tutor.Display.Request)
    func addToFavorites(request: Tutor.Favorite.Request)
}

protocol TutorDataStore
{
    var tutorToDisplay: TutorDAO? { get set }
}

class TutorInteractor: TutorBusinessLogic, TutorDataStore
{
    var tutorToDisplay: TutorDAO?
    var presenter: TutorPresentationLogic?
    var worker: TutorWorker?
    
    // MARK: getTutor
    
    func getTutor(request: Tutor.Display.Request)
    {
        if let tutor = tutorToDisplay {
            let response = Tutor.Display.Response(tutor: tutor)
            presenter?.presentTutor(response: response)
        }
    }
    
    // MARK: addToFavorites
    
    func addToFavorites(request: Tutor.Favorite.Request)
    {
        self.worker = TutorWorker(tutorStore: TutorApi())
        let worker = self.worker!
        
        if let tutor = tutorToDisplay {
            worker.addToFavorites(id: tutor.objectId) { message in
                let response = Tutor.Favorite.Response(message: message)
                self.presenter?.presentFavorite(response: response)
            }
        } else {
            let response = Tutor.Favorite.Response(message: "Oups! un probleme est survenu r√©essayer plus tard !")
            presenter?.presentFavorite(response: response)
        }
    }
}
