//
//  TutorPresenter.swift
//  AcaBase
//
//  Created by Seif eddinne meddeb on 9/27/20.
//  Copyright (c) 2020 Seif eddinne meddeb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol TutorPresentationLogic
{
    func presentTutor(response: Tutor.Display.Response)
}

class TutorPresenter: TutorPresentationLogic
{
    weak var viewController: TutorDisplayLogic?
    
    // MARK: presentTutor
    
    func presentTutor(response: Tutor.Display.Response)
    {
        let tutor = response.tutor
        let subjects = getSubjectsString(for: tutor?.subjects)
        let pictureUrl = URL(string: tutor?.picture ?? "")
        let viewModel = Tutor.Display.ViewModel(tutor: response.tutor,pictureUrl: pictureUrl,subjects: subjects)
        
        viewController?.displayTutor(viewModel: viewModel)
    }
    
    // MARK: Private functions
    
    private func getSubjectsString(for subjects: [SubjectDAO]?) -> String {
        var subjectsString = ""
        if let unwrappedSubjects = subjects {
            for subject in unwrappedSubjects.enumerated() {
                subjectsString += subject.element.name
                if subject.offset != unwrappedSubjects.count {
                    subjectsString += "/"
                }
            }
        }
        return subjectsString
    }
}
