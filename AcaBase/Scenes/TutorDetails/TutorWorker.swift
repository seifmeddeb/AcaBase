//
//  TutorWorker.swift
//  AcaBase
//
//  Created by Seif eddinne meddeb on 9/27/20.
//  Copyright (c) 2020 Seif eddinne meddeb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class TutorWorker
{
    var tutorStore : TutorStoreProtocol
    
    init(tutorStore: TutorStoreProtocol)
    {
        self.tutorStore = tutorStore
    }
    
    func addToFavorites(id: Int, completionHandler: @escaping (() throws -> String) -> Void)
    {
        let request = FavoriteRequest(trainerId: id)
        self.tutorStore.addToFavorites(request: request) { (response: () throws -> FavoriteResponse) in
            do {
                let favResponse = try response()
                if let _ = favResponse.nbrFav{
                    DispatchQueue.main.async {
                        completionHandler{"ðŸŽ‰  Tuteur ajoutÃ© au favoris"}
                    }
                } else {
                    DispatchQueue.main.async {
                        completionHandler{throw FavError(title: "")}
                    }
                }
                
            } catch {
                let nserror = error as NSError
                print("Unresolved error \(nserror), \(nserror.userInfo)")
                DispatchQueue.main.async {
                    completionHandler{ throw error}
                }
            }
        }
    }
    
    func removeFromFavorites(id: Int, completionHandler: @escaping (() throws -> String) -> Void)
    {
        let request = FavoriteRequest(trainerId: id)
        self.tutorStore.removeFromFavorites(request: request) { (response: () throws -> FavoriteResponse) in
            do {
                let favResponse = try response()
                if let _ = favResponse.nbrFav{
                    DispatchQueue.main.async {
                        completionHandler{"ðŸŽ‰ Tuteur supprimÃ© des favoris"}
                    }
                } else {
                    DispatchQueue.main.async {
                        completionHandler{throw FavError(title: "")}
                    }
                }
                
            } catch {
                let nserror = error as NSError
                print("Unresolved error \(nserror), \(nserror.userInfo)")
                DispatchQueue.main.async {
                    completionHandler{ throw error}
                }
            }
        }
    }
}
protocol TutorStoreProtocol {
    func addToFavorites(request: FavoriteRequest, completionHandler: @escaping (() throws -> FavoriteResponse) -> Void)
    func removeFromFavorites(request: FavoriteRequest, completionHandler: @escaping (() throws -> FavoriteResponse) -> Void)
}

struct FavError : Error {
    var title: String
    init(title: String) {
        self.title = title
    }
}

