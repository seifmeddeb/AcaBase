//
//  VideoDetailsViewController.swift
//  AcaBase
//
//  Created by Seif eddinne meddeb on 2/14/21.
//  Copyright (c) 2021 Seif eddinne meddeb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import WebKit

protocol VideoDetailsDisplayLogic: class
{
    func displayVideoData(viewModel: VideoDetails.Load.ViewModel)
}

class VideoDetailsViewController: UIViewController, VideoDetailsDisplayLogic
{
    var interactor: VideoDetailsBusinessLogic?
    var router: (NSObjectProtocol & VideoDetailsRoutingLogic & VideoDetailsDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = VideoDetailsInteractor()
        let presenter = VideoDetailsPresenter()
        let router = VideoDetailsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    lazy var webView: WKWebView = {
        let wv = WKWebView()
        wv.uiDelegate = self
        wv.navigationDelegate = self
        wv.translatesAutoresizingMaskIntoConstraints = false
        return wv
    }()
    
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        view.addSubview(webView)
        NSLayoutConstraint.activate([
                                        webView.leadingAnchor.constraint(equalTo: view.leadingAnchor),
                                        webView.topAnchor.constraint(equalTo: view.topAnchor),
                                        webView.rightAnchor.constraint(equalTo: view.rightAnchor),
                                        webView.bottomAnchor.constraint(equalTo: view.bottomAnchor)])
        
        getVideoData()
    }
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    func getVideoData()
    {
        let request = VideoDetails.Load.Request()
        interactor?.getVideoData(request: request)
    }
    
    func displayVideoData(viewModel: VideoDetails.Load.ViewModel)
    {
        let youtubeRequest = URLRequest(url: viewModel.videoUrl)

        webView.load(youtubeRequest)
    }
}
extension VideoDetailsViewController : WKUIDelegate, WKNavigationDelegate {
    
}
